// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel = 00
 *       b if sel = 01
 *       c if sel = 10
 *       d if sel = 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];
    
    PARTS:
    Not(in=sel[0], out=nsel0);
    Not(in=sel[1], out=nsel1);

    And(a=nsel0,b=nsel1, out=sel0);
    And(a=sel[0],b=nsel1, out=sel1);
    And(a=nsel0,b=sel[1], out=sel2);
    And(a=sel[0],b=sel[1], out=sel3);

    And16(a=a, b[0]=sel0, b[1]=sel0, b[2]=sel0, b[3]=sel0, b[4]=sel0, b[5]=sel0, b[6]=sel0, b[7]=sel0, b[8]=sel0, b[9]=sel0, b[10]=sel0, b[11]=sel0, b[12]=sel0, b[13]=sel0, b[14]=sel0, b[15]=sel0, out=aOut);
    And16(a=b, b[0]=sel1, b[1]=sel1, b[2]=sel1, b[3]=sel1, b[4]=sel1, b[5]=sel1, b[6]=sel1, b[7]=sel1, b[8]=sel1, b[9]=sel1, b[10]=sel1, b[11]=sel1, b[12]=sel1, b[13]=sel1, b[14]=sel1, b[15]=sel1, out=bOut);
    And16(a=c, b[0]=sel2, b[1]=sel2, b[2]=sel2, b[3]=sel2, b[4]=sel2, b[5]=sel2, b[6]=sel2, b[7]=sel2, b[8]=sel2, b[9]=sel2, b[10]=sel2, b[11]=sel2, b[12]=sel2, b[13]=sel2, b[14]=sel2, b[15]=sel2, out=cOut);
    And16(a=d, b[0]=sel3, b[1]=sel3, b[2]=sel3, b[3]=sel3, b[4]=sel3, b[5]=sel3, b[6]=sel3, b[7]=sel3, b[8]=sel3, b[9]=sel3, b[10]=sel3, b[11]=sel3, b[12]=sel3, b[13]=sel3, b[14]=sel3, b[15]=sel3, out=dOut);

    Or16(a=aOut, b=bOut, out=abOut);
    Or16(a=cOut, b=dOut, out=cdOut);
    Or16(a=abOut, b=cdOut, out=out);
}